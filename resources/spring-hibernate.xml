<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="  
	       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
	       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
	       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
	       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
	       ">
	<!-- 启动注解扫描 -->     
    <context:component-scan base-package="sopsoft" />    
    <context:component-scan base-package="net.sopsoft.utils.*" />
	<!-- 加载资源文件 -->  
    <context:property-placeholder location="classpath:dbconfig.properties"/>  
  
    <!-- 数据库映射  -->
    <!-- 数据源1 -->
    <bean id="dataSource"  
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="${connection.driver_class}"/>  
        <property name="url" value="${connection.url.sopsoft}"/>  
        <property name="username" value="${connection.username.sopsoft}"/>  
        <property name="password" value="${connection.password.sopsoft}"/>  
    </bean>
    
    <!-- 数据源2 淘宝开源数据库连接池 -->
    <!-- <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${connection.url.sopsoft}" />
        <property name="username" value="${connection.username.sopsoft}" />
        <property name="password" value="${connection.password.sopsoft}" />
        初始化连接大小
        <property name="initialSize" value="0" />
        连接池最大使用连接数量
        <property name="maxActive" value="20" />
        连接池最大空闲
        <property name="maxIdle" value="20" />
        连接池最小空闲
        <property name="minIdle" value="0" />
        获取连接最大等待时间
        <property name="maxWait" value="60000" />
        <property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" value="33" />
        <property name="validationQuery" value="${validationQuery.sqlserver}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />

        配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        配置一个连接在池中最小生存的时间，单位是毫秒
        <property name="minEvictableIdleTimeMillis" value="25200000" />

        打开removeAbandoned功能
        <property name="removeAbandoned" value="true" />
        1800秒，也就是30分钟
        <property name="removeAbandonedTimeout" value="1800" />
        关闭abanded连接时输出错误日志
        <property name="logAbandoned" value="true" />

         开启Druid的监控统计功能
         <property name="filters" value="stat" /> 
        <property name="filters" value="mergeStat" />
   </bean> -->
      
    <!-- hibernate sessionFactory -->  
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >  
        <property name="dataSource" ref="dataSource"/>  
        <!-- 扫描映射文件，实体类 -->  
        <property name="packagesToScan">  
            <list>  
                <!-- 注解方式配置 -->
                <value>sopsoft.demo..entity</value>  
            </list>  
        </property>  
        <property name="hibernateProperties">  
            <props>  
                 <prop key="hibernate.dialect">${hibernate.dialect}</prop>  
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>  
                <prop key="hibernate.format_sql">true</prop>  
                  
                <!-- 其他相关信息  暂时不用
                <prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>  
                <prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>  
                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>  
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>  
                <prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>  
                  
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>  
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>  
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>  
                 
                <prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>  
                 -->  
                 <!--   
                <prop key="net.sf.ehcache.configurationResourceName">${net.sf.ehcache.configurationResourceName}</prop>  
                 -->  
                  
            </props>  
        </property>  
    </bean>  
      
    <!-- 开启AOP监听 只对当前配置文件有效 -->
    <!--  <aop:aspectj-autoproxy expose-proxy="true"/>  -->
    <!-- 事务管理器，这里可以设置多个 -->  
   	
    <!-- 给事务注入sessionFactory属性 -->  
    <bean id="H4TxManager" 
    	class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>  
    
    <!-- 配置事物管理器，在*ServiceImpl里写@Transactional就可以启用事物管理 -->
	<tx:annotation-driven transaction-manager="H4TxManager"/>
    
    <!-- 事务属性配置 -->  
    <!-- <tx:advice id="txAdvice" transaction-manager="H4TxManager">  
        <tx:attributes>  
            方法对应的传播属性  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="create*" propagation="REQUIRED" />  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="merge*" propagation="REQUIRED" />  
            <tx:method name="del*" propagation="REQUIRED" />  
            <tx:method name="remove*" propagation="REQUIRED" />  
            <tx:method name="put*" propagation="REQUIRED" />  
            <tx:method name="use*" propagation="REQUIRED"/>  
             copy来的，留着  
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="*" read-only="true" />  
        </tx:attributes>  
    </tx:advice>  
    事务控制位置，一般在业务层service  
    <aop:config>  
        <aop:pointcut id="txPointcut" expression="execution(* sopsoft.demo..service..*.*(..))" />  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>  
    </aop:config>  --> 
	
</beans>
